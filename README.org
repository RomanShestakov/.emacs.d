#+TITLE:    Emacs customisation installation notes
#+AUTHOR:   Roman Shestakov
#+LANGUAGE: en

* Pre-requisites
These packages needs to be installed before install:
** Linux debian
#+BEGIN_SRC bash
#sudo apt-get install texinfo
#sudo apt-get install texlive
#sudo apt-get install bzr
sudo apt-get install git
# python mode autocomple with jedi needs vertualenv
sudo apt-get install -y python-virtualenv
sudo pip install ipython
# run jedi install
# M-x jedi:install-server
#+END_SRC

** MacOs
#+BEGIN_SRC bash
# use homebrew
# install homebrew:
# ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
brew install autoconf
brew install git
# brew install bzr
# emacs depends on texinfo v.5.2
# brew install texinfo
# http://www.linuxfromscratch.org/lfs/view/development/chapter06/texinfo.html
# brew link texinfo --force
# brew info texinfo
# download / manually install mactex
http://www.tug.org/mactex/
# need to install pip and virtualenv for jedi autocompletion to work in python-mode
easy-install pip
pip install virtualenv
pip install ipython
#+END_SRC

* Install
# Clone from github:
git clone https://github.com/RomanShestakov/.emacs.d.git
# build distel
cd .emacs.d/lisp/distel && make

# Environment vars
# set the following vars in .profile
# ERL_TOP
# The path to erlang installation is loaded from env var ERL_TOP so
# this var needs to be set in bash .profile

#+BEGIN_SRC bash
export ERL_TOP=/usr/local/lib/erlang
#+END_SRC

# PYTHONPATH
# PYTHONPATH is used by python-mode, should be setup by .profile
#+BEGIN_SRC bash
export PYTHONPATH=/usr/local/lib/python2.7/site-packages:
#+END_SRC

* Install with Vagrant
## this will load VM repo and install it with Vagrant
#+BEGIN_SRC 
git clone https://github.com/RomanShestakov/vm.git
cd vm
vagrant up
vagrant ssh
emacs -nw
## setup jedi 
M-x jedi:install-server
start python file.
C-c C-p - start python shell
C-c C-c - eval python buffer
#+END_SRC

* Emacs plug-ins
External packages are installed from MELPA using use-package macro. They are placed in ~/.emacs.d/elpa.
~/.emacs.d/elpa dir is saved into git tree. This is done to improve portability across different systems.
The packages that are installed manually should be placed into ~/.emacs/lisp

* Color theme - gruber-darker-theme
https://github.com/rexim/gruber-darker-theme
* Distel-mode

Distel mode depends on Erlang mode, so need to correct a path to the version of 
tools/emacs

Distel mode lives in lisp/distel - it is easier this way when getting via ELPA.
Also it needs to compile erl files before the first run. 

#+BEGIN_SRC elisp
cd .emacs.d/lisp/distel
make
#+END_SRC

To use distel mode: 

1. start erlang shell : C-c C-z
2. connect distel to it: C-c C-d n
now M-. should work 

* Syntax checker for erlang-mode
Erlang mode uses [[https://github.com/ten0s/syntaxerl][syntaxerl]] for erlang syntax checking, which integrates with flymake

#+BEGIN_SRC bash
git clone git://github.com/ten0s/syntaxerl.git
cd syntaxerl
make
#+END_SRC 

this will generate syntaxerl file which needs to be added to .emacs.d/bin

* Python mode
I use python.el which is shipped with emacs.
The setup depends on ipython, virtualenv.
Before starting using python mode, jedi mode needs to be initialized.
M-x jedi:install-server

shortcuts:
C-c C-p - start python shell
C-c C-c - execute buffer (or F9)

* Jedi autocompletion mode for python
jedi requires that pip and virtualenv are installed
easy-install pip
pip install virtualenv
then in emacs:
M-x jedi:install-server

* Projectile
http://tuhdo.github.io/helm-projectile.html
** Key bindings for projectile
C-c p p - switch project
C-c p f - find file in the current project
C-c p g - grep in files in the project
C-u C-c p f - invalidate cache
C-c p C-h - help (show key bindings)
* How to start up erlang session with distel
Erlang project should have a .erlang file in the root. See .emacs/snippets/erlang-mode/erlang.
Any .erl file in the project should be evaluated by F9 - this will open a new erlang shell (if not already opened).
Erlang shell will load .erlang from the root of the project and will setup all the required paths to the dependecies.
C-c C-d n - will start Distel session linked to the loaded erlang shell.
After that M-. / M-, binding should work.
* Some nice emacs functions
describe-personal-keybindings - allows to see defined keys binding and overrides
* Links to the nice examples of emacs configurations
- [[https://github.com/jhamrick/emacs][Jessica Hamrick emacs setup as Python IDE]]
- [[https://github.com/jwiegley/use-package][Use-package Git repo]]
- [[https://github.com/jwiegley/dot-emacs][John Wiegley init.el]]
- [[http://pages.sachachua.com/.emacs.d/Sacha.html#unnumbered-189][Sacha Chua init file]]
- https://github.com/lunaryorn/.emacs.d/blob/master/init.el
- [[https://www.youtube.com/watch?v=2TSKxxYEbII][John Wiegley explanation for use-package]]






